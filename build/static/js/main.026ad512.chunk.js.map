{"version":3,"sources":["action/types.js","reducer/reducer.js","reducer/index.js","store.js","logo.svg","action/index.js","component/login.js","component/register.js","component/verifyemail.js","component/dashboard/index.js","config/protect.js","config/routing.js","App.js","index.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_FAIL","LOGIN_SUCCESS","VERIFY_EMAIL_SUCCESS","VERIFY_EMAIL_FAIL","INITIATE_PAYMENT_SUCCESS","INITIATE_PAYMENT_FAIL","GET_USER","initialState","token","localStorage","getItem","payments","user","error_message","success_message","combineReducers","data","state","action","type","payload","setItem","info","middleware","thunk","composeSetup","compose","store","createStore","rootReducer","applyMiddleware","baseURL","config","headers","getToken","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","connect","classes","useState","message","setMessage","email","setEmail","password","setPassword","handleSubmitForm","e","preventDefault","id","dispatch","a","body","JSON","stringify","Axios","post","response","HandleUserLogin","useEffect","Container","component","maxWidth","CssBaseline","className","Avatar","noValidate","root","Alert","severity","TextField","required","fullWidth","label","name","autoComplete","autoFocus","onChange","target","value","FormControlLabel","control","Checkbox","Button","onClick","Grid","container","item","xs","Box","mt","handleFormSubmit","console","log","HandleUserRegistration","history","useHistory","useParams","HandleEmailVerification","push","rows","seeMore","amount","setAmount","get","submitForm","paymentLink","HandleInitiatePayment","Fragment","Table","size","TableHead","TableRow","TableCell","TableBody","map","row","payment_info","payment_type","status","window","location","replace","ProtectDasboard","Component","rest","render","props","to","pathname","from","RedirectHome","exact","path","Login","Register","VerifyEmail","Dashboard","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.026ad512.chunk.js","sourcesContent":["export const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const  REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const VERIFY_EMAIL_SUCCESS = 'VERIFY_EMAIL_SUCCESS';\r\nexport const VERIFY_EMAIL_FAIL = 'VERIFY_EMAIL_FAIL';\r\nexport const INITIATE_PAYMENT_SUCCESS = 'INITIATE_PAYMENT_SUCCESS'\r\nexport const INITIATE_PAYMENT_FAIL = 'INITIATE_PAYMENT_FAIL'\r\nexport const PAYMENT_FAIL = 'PAYMENT_FAIL'\r\nexport const PAYMENT_SUCCESS = 'PAYMENT_SUCCESS'\r\nexport const GET_USER = 'GET_USER'\r\n\r\n\r\n","import { REGISTER_FAIL, REGISTER_SUCCESS,LOGIN_FAIL,\r\n  LOGIN_SUCCESS,VERIFY_EMAIL_FAIL,VERIFY_EMAIL_SUCCESS,GET_USER,INITIATE_PAYMENT_FAIL,INITIATE_PAYMENT_SUCCESS } from \"../action/types\";\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  payments: [],\r\n  user: null,\r\n  error_message: null,\r\n  success_message: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n\r\n    case INITIATE_PAYMENT_SUCCESS:\r\n    case VERIFY_EMAIL_SUCCESS:\r\n    case REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        success_message: action.payload,\r\n        error_message:null\r\n      };\r\n\r\n    case INITIATE_PAYMENT_FAIL:\r\n    case VERIFY_EMAIL_FAIL:\r\n    case LOGIN_FAIL:\r\n    case REGISTER_FAIL:\r\n      return {\r\n        ...state,\r\n        error_message: action.payload,\r\n        success_message:null\r\n      };\r\n\r\n    case LOGIN_SUCCESS:\r\n        localStorage.setItem('token', action.payload.info)\r\n        return{\r\n            ...state,\r\n            token:action.payload.info,\r\n            success_message:null,\r\n            error_message:null\r\n        };\r\n\r\n      case GET_USER:\r\n        return{\r\n          ...state,\r\n          user:action.payload,\r\n          payments:action.payload.payments\r\n        }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {combineReducers} from 'redux';\r\nimport reducer from './reducer';\r\n\r\n\r\n\r\nexport default combineReducers({\r\n    data:reducer\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducer\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\n\r\nconst composeSetup =\r\n  process.env.NODE_ENV !== \"production\" &&\r\n  typeof window == \"object\" &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    : compose;\r\n\r\nlet store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeSetup(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\r\nimport Axios from 'axios';\r\nimport {REGISTER_FAIL,REGISTER_SUCCESS,\r\n    LOGIN_FAIL,LOGIN_SUCCESS,VERIFY_EMAIL_FAIL,\r\n    VERIFY_EMAIL_SUCCESS,\r\n    GET_USER,\r\n    INITIATE_PAYMENT_FAIL,\r\n    INITIATE_PAYMENT_SUCCESS,\r\n} from './types'\r\n\r\nlet baseURL = 'https://basicecommerec.herokuapp.com/'\r\nlet config = {\r\n    headers:{\r\n        \"Content-Type\":\"application/json\"\r\n    }\r\n};\r\n\r\n\r\nconst getToken =()=>{\r\n    let token = localStorage.getItem('token');\r\n\r\n    if(token){\r\n        config.headers['X-AUTH-TOKEN'] = token;\r\n    }\r\n\r\n\r\n    return config;\r\n}\r\n\r\n\r\nexport const HandleUserRegistration =(data)=> async (dispatch)=>{\r\n    try {\r\n\r\n        const body = JSON.stringify(data);\r\n\r\n        let response = await Axios.post(baseURL + `api/auth/register`, body,config);\r\n\r\n        \r\n\r\n        dispatch({\r\n            type:REGISTER_SUCCESS,\r\n            payload:{\r\n                type:'register-success',\r\n                info:'Registration successful, a verification link has been sent to your email.'\r\n            }\r\n        })\r\n        \r\n    } catch (error) {\r\n        \r\n        error= error.response.data;\r\n\r\n        return dispatch({\r\n            type:REGISTER_FAIL,\r\n            payload:{\r\n                type:'register-fail',\r\n                info:error.message\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const HandleUserLogin = (data) => async (dispatch)=>{\r\n    try {\r\n\r\n        let body = JSON.stringify(data);\r\n        let response = await Axios.post(baseURL + `api/auth/login`, body,config);\r\n\r\n        response = response.data;\r\n\r\n        return dispatch({\r\n            type:LOGIN_SUCCESS,\r\n            payload:{\r\n                type:'login-success',\r\n                info:response.message\r\n            }\r\n        })\r\n        \r\n    } catch (error) {\r\n        \r\n        error = error.response.data;\r\n\r\n        return dispatch({\r\n            type:LOGIN_FAIL,\r\n            payload:{\r\n                type:'login-fail',\r\n                info:error.message\r\n            }\r\n        })\r\n\r\n    }\r\n};\r\n\r\nexport const HandleEmailVerification =(token)=> async (dispatch)=>{\r\n    try {\r\n\r\n        let response = await Axios.post(baseURL + `api/auth/verifyemail/${token}`,config);\r\n        response= response.data;\r\n        \r\n\r\n        return dispatch({\r\n            type:VERIFY_EMAIL_SUCCESS,\r\n            payload:{\r\n                type:'verify-email-success',\r\n                info:response.message\r\n            }\r\n        })\r\n        \r\n        \r\n    } catch (error) {\r\n        error = error.response.data;\r\n\r\n        return dispatch({\r\n            type:VERIFY_EMAIL_FAIL,\r\n            payload:{\r\n                type:'verify-email-fail',\r\n                info:error.message\r\n            }\r\n        })\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const HandleGetUserDetails =()=> async (dispatch)=>{\r\n    try {\r\n\r\n        let response = await Axios.get(baseURL +  'users/me',getToken());\r\n        response = response.data;\r\n\r\n        dispatch({\r\n            type:GET_USER,\r\n            payload:response.message\r\n        })\r\n\r\n\r\n        \r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n};\r\n\r\n\r\nexport const HandleInitiatePayment = (data) => async (dispatch)=>{\r\n    try {\r\n        // console.log(data)\r\n        let body = JSON.stringify(data)\r\n        let response = await Axios.post(baseURL + 'api/payment/initiate',body,getToken());\r\n\r\n        response = response.data;\r\n        console.log(response)\r\n        dispatch({\r\n            type:INITIATE_PAYMENT_SUCCESS,\r\n            payload:{\r\n                type:'inititate-payment-success',\r\n                info:response.paymentLink\r\n            }\r\n        })\r\n\r\n\r\n        \r\n    } catch (error) {\r\n        error = error.response.data;\r\n\r\n        dispatch({\r\n            type:INITIATE_PAYMENT_FAIL,\r\n            payload:{\r\n                type:'initiate-payment-fail',\r\n                info:error.message\r\n            }\r\n        })\r\n    }\r\n}","import React,{useEffect,useState} from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Redirect } from \"react-router\";\r\nimport store from '../store';\r\nimport {HandleUserLogin} from '../action'\r\nimport {connect} from 'react-redux'\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Login = ({error_message}) => {\r\n  const classes = useStyles();\r\n  const [message,setMessage] = useState();\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('');\r\n\r\n\r\n  const handleSubmitForm =(e) =>{\r\n    e.preventDefault();\r\n\r\n    if(!email || !password){\r\n      setMessage({\r\n        id:'0',\r\n        info:'All fields are required.'\r\n      })\r\n    };\r\n\r\n    let data ={email,password}\r\n    store.dispatch(HandleUserLogin(data));\r\n  };\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n\r\n\r\n    if(error_message && error_message.type === 'login-fail'){\r\n      setMessage({\r\n        id:'0',\r\n        info:error_message.info\r\n      })\r\n    }\r\n\r\n  },[error_message])\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n        {message && message.id === \"0\" ? (\r\n            <div className={classes.root}>\r\n              <Alert severity=\"error\">{message.info}</Alert>\r\n            </div>\r\n          ) : null}\r\n\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            onChange={(e)=>setEmail(e.target.value)}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={(e)=>setPassword(e.target.value)}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={(e)=>handleSubmitForm(e)}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n\r\n\r\n\r\n</>\r\n  );\r\n};\r\n\r\nconst mapStateToProps =({data:{error_message}})=>({\r\nerror_message\r\n})\r\n\r\nexport default connect(mapStateToProps,null)(Login);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { connect } from \"react-redux\";\r\nimport store from \"../store\";\r\nimport { HandleUserRegistration } from \"../action\";\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Register = ({ error_message, success_message }) => {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [message, setMessage] = useState();\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    setMessage(\"\");\r\n    if (!password || !email) {\r\n      setMessage({\r\n        id: \"0\",\r\n        info: \"All fields are required.\",\r\n      });\r\n    }\r\n\r\n    /*Proceed with sending info to backend   */\r\n    let data = {\r\n      email,\r\n      password,\r\n    };\r\n    console.log(data);\r\n    store.dispatch(HandleUserRegistration(data));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (success_message && success_message.type === \"register-success\") {\r\n      setMessage({\r\n        id: \"1\",\r\n        info: success_message.info,\r\n      });\r\n    }\r\n\r\n    if (error_message && error_message.type === \"register-fail\") {\r\n      setMessage({\r\n        id: \"0\",\r\n        info: error_message.info,\r\n      });\r\n    }\r\n  }, [error_message, success_message]);\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          {message && message.id === \"0\" ? (\r\n            <div className={classes.root}>\r\n              <Alert severity=\"error\">{message.info}</Alert>\r\n            </div>\r\n          ) : null}\r\n\r\n          {message && message.id === \"1\" ? (\r\n            <div className={classes.root}>\r\n              <Alert severity=\"success\">{message.info}</Alert>\r\n            </div>\r\n          ) : null}\r\n\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            autoComplete=\"current-password\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={(e) => handleFormSubmit(e)}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign in\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ data: { error_message, success_message } }) => ({\r\n  error_message,\r\n  success_message,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Register);\r\n","import React,{useState,useEffect} from 'react'\r\nimport {useHistory,useParams} from 'react-router-dom';\r\nimport store from '../store';\r\nimport {connect} from 'react-redux';\r\nimport {HandleEmailVerification} from '../action'\r\n\r\n\r\n\r\n\r\n\r\nconst Verifyemail = ({success_message,error_message}) => {\r\n    const [message,setMessage] = useState();\r\n    const history = useHistory()\r\n    const {token} = useParams();\r\n\r\n    \r\n    useEffect(()=>{\r\n\r\n        \r\n        \r\n            if(token){\r\n                /*    Proceed with sending the info to the backend   */\r\n\r\n                store.dispatch(HandleEmailVerification(token))\r\n\r\n\r\n            }else{\r\n                history.push('/register')\r\n            }\r\n        \r\n\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n\r\n        if(success_message && success_message.type === 'verify-email-success'){\r\n            setMessage(success_message)\r\n        }\r\n\r\n        if(error_message && error_message.type === 'verify-email-fail'){\r\n                setMessage(error_message)\r\n        }\r\n\r\n    },[error_message,success_message]);\r\n    return (\r\n        <div>\r\n            <p>{message ? message.info : null}</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps =({data:{success_message,error_message}})=>({\r\n    success_message,error_message\r\n})\r\n\r\nexport default connect(mapStateToProps,null)(Verifyemail)\r\n","import React,{useEffect,useState} from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport store from '../../store';\r\nimport {HandleGetUserDetails,HandleInitiatePayment} from '../../action';\r\nimport  {connect} from 'react-redux'\r\n// import Title from './Title';\r\n\r\n\r\n\r\nlet rows = [];\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  seeMore: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst  Index = ({user,payments,error_message,success_message}) =>{\r\n  const classes = useStyles();\r\n  const [amount, setAmount] = useState(0)\r\n\r\n  useEffect(()=>{\r\n    store.dispatch(HandleGetUserDetails())\r\n  },[])\r\n\r\n  const submitForm=(e)=>{\r\n    e.preventDefault();\r\n\r\n    let data = {amount};\r\n\r\n    store.dispatch(HandleInitiatePayment(data))\r\n  }\r\n\r\nuseEffect(()=>{\r\nrows= payments\r\n},[payments])\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <p>{user ? user.email : null}</p>\r\n      <input  onChange={(e)=>setAmount(e.target.value)} type=\"number\" />\r\n      <button onClick={e=>submitForm(e)} >Button</button>\r\n      {/* <Title>Recent Orders</Title> */}\r\n      <Table size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {/* <TableCell>Date</TableCell> */}\r\n            <TableCell>id</TableCell>\r\n            <TableCell>Amount</TableCell>\r\n            <TableCell>Payment Type</TableCell>\r\n            <TableCell align=\"right\">Satus</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.payment_info.id}>\r\n              <TableCell>{row.payment_info.id}</TableCell>\r\n              <TableCell>{row.payment_info.amount}</TableCell>\r\n              <TableCell>{row.payment_info.payment_type}</TableCell>\r\n              \r\n              <TableCell align=\"right\">{row.payment_info.status}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      <div className={classes.seeMore}>\r\n            {error_message && error_message.type === 'initiate-payment-fail' ? error_message.info : null}\r\n\r\n\r\n            {success_message && success_message.type === 'inititate-payment-success' ? window.location.replace(success_message.info) : null}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps =({data:{user,payments,error_message,success_message}})=>({\r\n  payments,user,success_message,error_message\r\n})\r\n\r\nexport default  connect(mapStateToProps, null)(Index);","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\n\r\n\r\n\r\nexport const ProtectDasboard =({component:Component,token, ...rest})=>{\r\n\r\n\r\n    return(\r\n        <Route\r\n        {...rest} render={\r\n            props=>{   \r\n                if(token){\r\n                    return <Component {...rest} {...props}/>\r\n                }else{\r\n                    return <Redirect to={\r\n                        {\r\n                            pathname:\"/\",\r\n                            state:{\r\n                                from:props.location \r\n                            }\r\n                        }\r\n                    } />\r\n                }\r\n            }\r\n        }\r\n\r\n        />\r\n    );\r\n};\r\n\r\n\r\n\r\nexport const RedirectHome =({component:Component,token, ...rest})=>{\r\n\r\n\r\n    return(\r\n        <Route\r\n        {...rest} render={\r\n            props=>{\r\n                if(!token){\r\n                    return <Component {...rest} {...props}/>\r\n                }else{\r\n                    return <Redirect to={\r\n                        {\r\n                            pathname: \"/user/dashboard\",\r\n                            state:{\r\n                                from:props.location\r\n                            }\r\n                        }\r\n                    } />\r\n                }\r\n            }\r\n        }\r\n\r\n        />\r\n    );\r\n};","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Login from \"../component/login\";\r\nimport Register from \"../component/register\";\r\nimport VerifyEmail from \"../component/verifyemail\";\r\nimport Dashboard from \"../component/dashboard\";\r\nimport {RedirectHome,ProtectDasboard} from './protect'\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nconst Routing = ({token}) => {\r\n  return (\r\n    <Switch>\r\n      <RedirectHome exact path=\"/\" token={token} component={Login} />\r\n      <RedirectHome exact path=\"/register\" token={token} component={Register} />\r\n      <Route exact path=\"/verifyemail/:token\" component={VerifyEmail} />\r\n      <ProtectDasboard token={token} exact path=\"/user/dashboard\" component={Dashboard} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nconst mapStateToProps =({data:{token}})=>({\r\n  token\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(Routing);\r\n","import logo from './logo.svg';\n\nimport Routing from './config/routing'\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Routing/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\nimport store from './store';\nimport {Provider} from 'react-redux'\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}